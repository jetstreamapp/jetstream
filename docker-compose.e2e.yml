version: '3.8'
services:
  jetstream:
    build:
      context: .
      dockerfile: ./Dockerfile.e2e
    depends_on:
      - db
      - db_seed
    ipc: host
    init: true
    environment:
      NODE_ENV: production
      ENVIRONMENT: production
      JETSTREAM_POSTGRES_DBURI: postgres://postgres:postgres@postgres:5432/postgres
      JETSTREAM_SESSION_SECRET: '${JETSTREAM_SESSION_SECRET}'
      JETSTREAM_CLIENT_URL: http://localhost:3333/app
      JETSTREAM_SERVER_DOMAIN: localhost:3333
      JETSTREAM_SERVER_URL: http://localhost:3333
      EXAMPLE_USER_OVERRIDE: 'true'
      SFDC_API_VERSION: '${SFDC_API_VERSION}'
      SFDC_CONSUMER_SECRET: '${SFDC_CONSUMER_SECRET}'
      SFDC_CONSUMER_KEY: '${SFDC_CONSUMER_KEY}'
      SFDC_CALLBACK_URL: '${SFDC_CALLBACK_URL}'
      NX_PUBLIC_ROLLBAR_KEY: '${NX_PUBLIC_ROLLBAR_KEY}'
      NX_PUBLIC_AMPLITUDE_KEY: '${NX_PUBLIC_AMPLITUDE_KEY}'
    ports:
      - '3333:3333'
      - '9229:9229'
    links:
      - db
  e2e:
    build:
      context: .
      dockerfile: ./Dockerfile.e2e
    depends_on:
      - jetstream
    ipc: host
  db:
    image: postgres:16.1-alpine
    restart: always
    hostname: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
  db_seed:
    build:
      context: .
      dockerfile: ./Dockerfile.db-migration
    depends_on:
      - db
    environment:
      NODE_ENV: production
      ENVIRONMENT: production
      JETSTREAM_POSTGRES_DBURI: postgres://postgres:postgres@postgres:5432/postgres
volumes:
  db:
    driver: local
