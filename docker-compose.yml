version: '3.8'
services:
  jetstream:
    image: jetstream-app
    init: true
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env.example
      - .env
    environment:
      NODE_ENV: production
      ENVIRONMENT: production
      JETSTREAM_POSTGRES_DBURI: postgres://postgres:postgres@postgres:5432/postgres
      EXAMPLE_USER_OVERRIDE: true
      JETSTREAM_SESSION_SECRET: '${JETSTREAM_SESSION_SECRET}'
      JETSTREAM_CLIENT_URL: http://localhost:3333/app
      JETSTREAM_SERVER_DOMAIN: localhost:3333
      JETSTREAM_SERVER_URL: http://localhost:3333
    ports:
      - '3333:3333'
    links:
      - db
  db:
    image: postgres:16.1-alpine
    restart: always
    hostname: postgres
    environment:
      - POSTGRES_USER=postgres
      - PGUSER=postgres
      - POSTGRES_PASSWORD=postgres
    expose:
      - 5432
    ports:
      - '5555:5432'
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      # this command checks if the database is ready directly on the source db server
      test: ['CMD-SHELL', 'pg_isready']
      interval: 5s
      timeout: 5s
      retries: 5
  db_seed:
    image: jetstream-app
    command: >
      bash -c "yarn db:migrate && yarn db:seed"
    links:
      - db
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: production
      ENVIRONMENT: production
      JETSTREAM_POSTGRES_DBURI: postgres://postgres:postgres@postgres:5432/postgres

volumes:
  db:
    driver: local
